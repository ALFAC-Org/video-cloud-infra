name: Destroy infrastructure

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Load environment variables
        uses: thaind0/envfile@v1
        with:
          secrets: ${{ toJSON(secrets) }}
          file: infrastructure/.env

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: terraform_init
        run: terraform init -reconfigure -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME }}" -backend-config="key=video-infrastructure.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"
        continue-on-error: true

      - name: Terraform Init (if failed)
        if: ${{ steps.terraform_init.outcome == 'failure' }}
        id: terraform_init_failed
        run: terraform init -backend-config="bucket=hackathon-video-studio-bucket" -backend-config="key=video-infrastructure.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Terraform Validate
        if: ${{ steps.terraform_init.outcome == 'success' || steps.terraform_init_failed.outcome == 'success' }}
        run: terraform validate

      - name: Terraform Destroy
        if: ${{ steps.terraform_init.outcome == 'success' || steps.terraform_init_failed.outcome == 'success' }}
        run: bash terraform.sh destroy -auto-approve

      - name: Delete S3 Buckets
        continue-on-error: true
        run: |
          if aws s3 rb s3://${{ secrets.AWS_BUCKET_NAME }} --force; then
            echo "Successfully deleted bucket: ${{ secrets.AWS_BUCKET_NAME }}"
          else
            echo "Failed to delete bucket: ${{ secrets.AWS_BUCKET_NAME }}"
          fi
